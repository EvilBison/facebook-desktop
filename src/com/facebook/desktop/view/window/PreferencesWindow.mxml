<?xml version="1.0" encoding="utf-8"?>
<s:Window
		xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:component="com.facebook.desktop.view.component.*"
		minWidth="550" minHeight="525" width="{mainCanvas.width + 175}" height="{mainCanvas.height + 30}"
		transparent="true"
		systemChrome="none"
		showStatusBar="false"
		type="lightweight"
		maximizable="false"
		minimizable="false"
		resizable="false"
		styleName="popup"
		alwaysInFront="true"
		backgroundAlpha="0">

	<fx:Script>
		<![CDATA[
			import com.charlesbihis.engine.notification.NotificationConst;
			import com.facebook.desktop.FacebookDesktopConst;
			import com.facebook.desktop.control.Controller;
			import com.facebook.desktop.control.api.GetAdditionalNotifications;
			import com.facebook.desktop.control.api.GetBirthdays;
			import com.facebook.desktop.control.preferences.PreferencesManager;
			import com.facebook.desktop.model.Model;
			
			import mx.controls.ToolTip;
			import mx.core.IUIComponent;
			import mx.events.ListEvent;
			import mx.logging.ILogger;
			import mx.logging.Log;
			import mx.managers.ToolTipManager;
			
			private static var controller:Controller = Controller.instance;
			private static var log:ILogger = Log.getLogger("com.facebook.preferences.PreferencesWindow");
			
			[Bindable]
			private var model:Model = Model.instance;
			
			private var languageToolTip:ToolTip;
			
			public override function open(openWindowActive:Boolean = true):void
			{
				// actually open the window
				super.open(openWindowActive);
				
				// center it
				nativeWindow.x = (Capabilities.screenResolutionX - nativeWindow.width) / 2;
				nativeWindow.y = (Capabilities.screenResolutionY - nativeWindow.height) / 2;
				
				// now load up the preferences
				
				// application settings
				localeComboBox.selectedIndex = model.preferences.language;
				startAtLoginCheckbox.selected = model.preferences.startAtLogin;
				
				// notification settings
				showNewsFeedUpdates.selected = model.preferences.showNewsFeedUpdates;
				showActivityUpdates.selected = model.preferences.showActivityUpdates;
				showNewMessages.selected = model.preferences.showMessages;
				showFriendRequests.selected = model.preferences.showFriendRequests;
				showShares.selected = model.preferences.showShares;
				showGroupInvites.selected = model.preferences.showGroupInvites;
				showEventInvites.selected = model.preferences.showEventInvites;
				showPokes.selected = model.preferences.showPokes;
				showBirthdays.selected = model.preferences.showBirthdays;
				showNewsFeedUpdatesSticky.selected = model.preferences.showNewsFeedUpdatesSticky;
				showActivityUpdatesSticky.selected = model.preferences.showActivityUpdatesSticky;
				showNewMessagesSticky.selected = model.preferences.showMessagesSticky;
				showFriendRequestsSticky.selected = model.preferences.showFriendRequestsSticky;
				showSharesSticky.selected = model.preferences.showSharesSticky;
				showGroupInvitesSticky.selected = model.preferences.showGroupInvitesSticky;
				showEventInvitesSticky.selected = model.preferences.showEventInvitesSticky;
				showPokesSticky.selected = model.preferences.showPokesSticky;
				showBirthdaysSticky.selected = model.preferences.showBirthdaysSticky;
				
				// advanced settings
				notificationDisplayLength.value = model.preferences.notificationDisplayLength;
				clickActionComboBox.selectedIndex = model.preferences.iconClickAction;
				themeComboBox.selectedIndex = model.preferences.theme;
				markAsReadCheckBox.selected = model.preferences.markNotificationsAsRead;
				playNotificationSound.selected = model.preferences.playNotificationSound;
				
				// for some reason, combo-box won't drop down on first click unless it's given focus
				localeComboBox.setFocus();
				
				fadein.play();
			}  // open
			
			private function saveSettings():void
			{
				// application settings
				model.preferences.language = localeComboBox.selectedIndex;
				model.preferences.startAtLogin = startAtLoginCheckbox.selected;
				
				// notification settings
				model.preferences.showNewsFeedUpdates = showNewsFeedUpdates.selected;
				model.preferences.showActivityUpdates = showActivityUpdates.selected;
				model.preferences.showMessages = showNewMessages.selected;
				model.preferences.showFriendRequests = showFriendRequests.selected;
				model.preferences.showShares = showShares.selected;
				model.preferences.showGroupInvites = showGroupInvites.selected;
				model.preferences.showEventInvites = showEventInvites.selected;
				model.preferences.showPokes = showPokes.selected;
				model.preferences.showBirthdays = showBirthdays.selected;
				model.preferences.showNewsFeedUpdatesSticky = showNewsFeedUpdatesSticky.selected;
				model.preferences.showActivityUpdatesSticky = showActivityUpdatesSticky.selected;
				model.preferences.showMessagesSticky = showNewMessagesSticky.selected;
				model.preferences.showFriendRequestsSticky = showFriendRequestsSticky.selected;
				model.preferences.showSharesSticky = showSharesSticky.selected;
				model.preferences.showGroupInvitesSticky = showGroupInvitesSticky.selected;
				model.preferences.showEventInvitesSticky = showEventInvitesSticky.selected;
				model.preferences.showPokesSticky = showPokesSticky.selected;
				model.preferences.showBirthdaysSticky = showBirthdaysSticky.selected;
				
				// advanced settings
				model.preferences.notificationDisplayLength = notificationDisplayLength.value;
				model.preferences.iconClickAction = clickActionComboBox.selectedIndex;
				model.preferences.theme = themeComboBox.selectedIndex;
				model.preferences.markNotificationsAsRead = markAsReadCheckBox.selected;
				model.preferences.playNotificationSound = playNotificationSound.selected;
				
				PreferencesManager.savePreferences();
			}  // saveSettings
			
			private function changeLanguage():void
			{
				resourceManager.localeChain = [localeComboBox.selectedItem.locale, model.locales[0].locale];
				hideToolTip();
			}  // changeLanguage
			
			private function setStartAtLogin():void
			{
				if(!flash.system.Capabilities.isDebugger)
				{
					NativeApplication.nativeApplication.startAtLogin = startAtLoginCheckbox.selected;
				}  // if statement
			}  // setStartAtLogin
			
			private function doClose():void
			{
				controller.settingsWindowOpen = false;
				close();
			}  // doClose
			
			private function showToolTip(event:ListEvent):void
			{
				if (languageToolTip == null)
				{
					languageToolTip = ToolTipManager.createToolTip(event.itemRenderer.data.toolTip,
						localeComboBox.x + localeComboBox.width + event.itemRenderer.x,
						110 + event.itemRenderer.y,
						"errorTipRight",
						IUIComponent(event.currentTarget)) as ToolTip;
					languageToolTip.setStyle("styleName", "toolTip");
				}  // if statement
				else
				{
					languageToolTip.text = event.itemRenderer.data.toolTip;
					languageToolTip.x = localeComboBox.x + localeComboBox.width + event.itemRenderer.x;
					languageToolTip.y = 110 + event.itemRenderer.y;
				}  // else statement
				
				languageToolTip.visible = true;
			}  // showToolTip
			
			private function hideToolTip():void
			{
				if (languageToolTip != null)
				{
					languageToolTip.visible = false;
				}  // if statement
			}  // hideToolTip
			
			private function notificationDisplayLengthFormatter(value:String):String
			{
				return value + " seconds";
			}  // notificationDisplayLengthFormatter
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:Fade id="fadein" target="{this}" alphaFrom="0" alphaTo="1" duration="300" />
		<mx:Fade id="fadeout" target="{this}" alphaFrom="1" alphaTo="0" duration="300" effectEnd="doClose()" />
	</fx:Declarations>
	
	<mx:VBox cornerRadius="8" backgroundColor="black" backgroundAlpha="0.4" width="{mainCanvas.width + 25}" height="{mainCanvas.height + 25}" verticalAlign="middle" paddingTop="12" paddingBottom="12" paddingLeft="12" paddingRight="12">
		<mx:VBox id="mainCanvas" minWidth="525" minHeight="500" backgroundColor="white">
			<mx:VBox width="100%" height="35" backgroundColor="#6d84b4" verticalAlign="middle" paddingLeft="12">
				<s:Label text="{resourceManager.getString('resources','preferences.title')}" fontSize="17" color="white" />
			</mx:VBox>
			<mx:HBox minHeight="410" width="100%">
				<mx:VBox paddingLeft="15" paddingRight="15" paddingTop="15" paddingBottom="15" width="100%">
					
					<!-- application settings - header -->
					<mx:HBox verticalAlign="middle">
						<s:Label text="{resourceManager.getString('resources','preferences.applicationSettings.header')}" fontWeight="bold" />
					</mx:HBox>
					<mx:HRule width="100%" />
					
					<!-- application settings - options -->
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.applicationSettings.option.language')}" />
						<mx:Spacer width="100%" />
						<mx:ComboBox id="localeComboBox" itemRollOver="showToolTip(event)" itemRollOut="hideToolTip()" rollOut="hideToolTip()" dataProvider="{model.locales}" change="saveSettings();changeLanguage();log.info('Changing \'Language\' setting to {0}',localeComboBox.selectedItem.label)"/>
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.applicationSettings.option.runOnStartup')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="startAtLoginCheckbox" change="saveSettings();setStartAtLogin();log.info('Changing \'Run on startup\' setting to {0}',startAtLoginCheckbox.selected)" />
					</mx:HBox>
					<mx:Spacer height="15" />
					
					<!-- notification settings - header -->
					<mx:HBox verticalAlign="middle">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.header')}" fontWeight="bold" />
					</mx:HBox>
					<mx:HRule width="100%" />
					
					<!-- notification settings - options -->
					<mx:HBox verticalAlign="middle" width="100%" horizontalAlign="right" horizontalGap="4">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.subheading.show')}" fontSize="9" toolTip="{resourceManager.getString('resources','preferences.notificationSettings.subheading.show.toolTip')}" />
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.subheading.sticky')}" fontSize="9" toolTip="{resourceManager.getString('resources','preferences.notificationSettings.subheading.sticky.toolTip')}" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyNewsFeed')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showNewsFeedUpdates" change="saveSettings();log.info('Changing \'Notify me when new stories are posted to my news feed\' setting to {0}', showNewsFeedUpdates.selected)" />
						<s:CheckBox id="showNewsFeedUpdatesSticky" enabled="{showNewsFeedUpdates.selected}" change="saveSettings();log.info('Changing \'Notify me when new stories are posted to my news feed\' sticky setting to {0}', showNewsFeedUpdatesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyActivity')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showActivityUpdates" change="saveSettings();log.info('Changing \'Notify me when there is activity in a post that I am involved in\' setting to {0}', showActivityUpdates.selected)" />
						<s:CheckBox id="showActivityUpdatesSticky" enabled="{showActivityUpdates.selected}" change="saveSettings();log.info('Changing \'Notify me when there is activity in a post that I am involved in\' sticky setting to {0}', showActivityUpdatesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyMessage')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showNewMessages" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when someone sends me a message\' setting to {0}', showNewMessages.selected)" />
						<s:CheckBox id="showNewMessagesSticky" enabled="{showNewMessages.selected}" change="saveSettings();log.info('Changing \'Notify me when someone sends me a message\' sticky setting to {0}', showNewMessagesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyFriendRequest')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showFriendRequests" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when I get a new friend request\' setting to {0}', showFriendRequests.selected)" />
						<s:CheckBox id="showFriendRequestsSticky" enabled="{showFriendRequests.selected}" change="saveSettings();log.info('Changing \'Notify me when I get a new friend request\' sticky setting to {0}', showFriendRequestsSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyShare')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showShares" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when someone shares something with me\' setting to {0}', showShares.selected)" />
						<s:CheckBox id="showSharesSticky" enabled="{showShares.selected}" change="saveSettings();log.info('Changing \'Notify me when someone shares something with me\' sticky setting to {0}', showSharesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyGroupInvite')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showGroupInvites" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when I get a group invite\' setting to {0}', showGroupInvites.selected)" />
						<s:CheckBox id="showGroupInvitesSticky" enabled="{showGroupInvites.selected}" change="saveSettings();log.info('Changing \'Notify me when I get a group invite\' sticky setting to {0}', showGroupInvitesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyEventInvite')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showEventInvites" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when I get an event invite\' setting to {0}',showEventInvites.selected)" />
						<s:CheckBox id="showEventInvitesSticky" enabled="{showEventInvites.selected}" change="saveSettings();log.info('Changing \'Notify me when I get an event invite\' sticky setting to {0}', showEventInvitesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyPoke')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showPokes" change="saveSettings();new GetAdditionalNotifications().execute();log.info('Changing \'Notify me when someone pokes me\' setting to {0}', showPokes.selected)" />
						<s:CheckBox id="showPokesSticky" enabled="{showPokes.selected}" change="saveSettings();log.info('Changing \'Notify me when someone pokes me\' sticky setting to {0}', showPokesSticky.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.notificationSettings.option.notifyBirthdays')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="showBirthdays" change="saveSettings();new GetBirthdays().execute();log.info('Changing \'Notify me when my friends have birthdays\' setting to {0}', showBirthdays.selected)" />
						<s:CheckBox id="showBirthdaysSticky" enabled="{showBirthdays.selected}" change="saveSettings();log.info('Changing \'Notify me when my friends have birthdays\' sticky setting to {0}', showBirthdaysSticky.selected)" />
					</mx:HBox>
					<mx:Spacer height="15" />
					
					<!-- advanced settings - header -->
					<mx:HBox verticalAlign="middle">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.header')}" fontWeight="bold" />
					</mx:HBox>
					<mx:HRule width="100%" />
					
					<!-- advanced settings - options -->
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.option.notificationDisplayLength')}" />
						<mx:Spacer width="100%" />
						<s:VGroup>
							<s:Label text="short     medium     long" fontSize="9" />
							<s:HSlider id="notificationDisplayLength" minimum="{NotificationConst.DISPLAY_LENGTH_SHORT}" maximum="{NotificationConst.DISPLAY_LENGTH_LONG}" value="{NotificationConst.DISPLAY_LENGTH_DEFAULT}" snapInterval="2" dataTipFormatFunction="notificationDisplayLengthFormatter" change="saveSettings();log.info('Changing \'Notification display length\' setting to {0}', notificationDisplayLength.value);model.notificationManager.displayLength=notificationDisplayLength.value" />
						</s:VGroup>
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.option.clickAction.' + model.operatingSystem.toLowerCase())}" />
						<mx:Spacer width="100%" />
						<mx:ComboBox id="clickActionComboBox" dataProvider="{model.clickActions}" change="saveSettings();log.info('Changing \'Default icon click action to \' setting to {0}', clickActionComboBox.selectedLabel)"/>
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.option.theme')}" />
						<mx:Spacer width="100%" />
						<mx:ComboBox id="themeComboBox" dataProvider="{model.themes}" change="saveSettings();log.info('Changing \'Notification theme \' setting to {0}', themeComboBox.selectedLabel);model.notificationManager.closeAllNotifications();model.notificationManager.loadStyle(themeComboBox.selectedItem.data);model.notificationManager.show('You are now using the ' + themeComboBox.selectedLabel + ' theme!',null,FacebookDesktopConst.DEFAULT_NOTIFICATION_IMAGE,null,false,false,false)"/>
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.option.markNotificationsRead')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="markAsReadCheckBox" change="saveSettings();log.info('Changing \'Mark notifications as read when they appear on my screen\' setting to {0}', markAsReadCheckBox.selected)" />
					</mx:HBox>
					<mx:HBox verticalAlign="middle" width="100%">
						<s:Label text="{resourceManager.getString('resources','preferences.advancedSettings.option.playNotificationSound')}" />
						<mx:Spacer width="100%" />
						<s:CheckBox id="playNotificationSound" change="saveSettings();log.info('Changing \'Play notification sound\' setting to {0}', playNotificationSound.selected);model.notificationManager.loadSound((playNotificationSound.selected ? FacebookDesktopConst.DEFAULT_NOTIFICATION_SOUND : null))" />
					</mx:HBox>
					
				</mx:VBox>
			</mx:HBox>
			<mx:HBox minHeight="43" width="100%" backgroundColor="#f2f2f2" verticalAlign="middle" horizontalAlign="right" paddingRight="12" paddingTop="9" paddingBottom="9">
				<component:FacebookButton click="fadeout.play()" text="{resourceManager.getString('resources','component.button.okay')}" />
			</mx:HBox>
		</mx:VBox>
	</mx:VBox>
	
</s:Window>
